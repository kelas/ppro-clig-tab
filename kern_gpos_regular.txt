lookup ker {
   # asm
   pos a s' <-30 0 0 0> m;
   
   # abstract
   pos a b' <60 0 0 0> s' <60 0 0 0> t' <30 0 0 0> r' <30 0 0 0> a c t;
   
   # assert
   pos a s' <40 0 0 0> s' <30 0 0 0> e' <50 0 0 0> r' <70 0 0 0> t;
   
   # bool
   pos b o' <40 0 0 0> o' <70 0 0 0> l;
   
   # break
   pos b r' <30 0 0 0> e' <-40 0 0 0> a' <-10 0 0 0> k;
   
   # catch
   pos c a' <60 0 0 0> t' <40 0 0 0> c' <-40 0 0 0> h;
   
   # char
   pos c h a' <40 0 0 0> r;
   
   # continue
#   pos c o' <30 0 0 0> n' <50 0 0 0> t' <60 0 0 0> i' n' <-50 0 0 0> u' <-30 0 0 0> e;
   
   # default
   pos d e' <50 0 0 0> f' a' <-20 0 0 0> u' <40 0 0 0> l' <80 0 0 0> t;
   
   # delete
   pos d e' <50 0 0 0> l' e' <-40 0 0 0> t' <-30 0 0 0> e;
   
   # double
   pos d o u b' <120 0 0 0> l' <70 0 0 0> e;
   
   # enum
   pos e n' <-20 0 0 0> u' <-40 0 0 0> m;
   
   # else
   pos e l s' <-40 0 0 0> e;
   
   # extends
   pos e x t e' <-50 0 0 0> n' <-30 0 0 0> d s;
   
   # finally
   pos f i n' <10 0 0 0> a' <120 0 0 0> l' <120 0 0 0> l' <50 0 0 0> y;
   
   # final
   pos f i' <-50 0 0 0> n' <-60 0 0 0> a l;
   
   # float
   pos f l' <-10 0 0 0> o' <-60 0 0 0> a t;
   
   # friend
   pos f r i' <-60 0 0 0> e' <-120 0 0 0> n' <-60 0 0 0> d;
   
   # goto
   pos g o' <70 0 0 0> t' <50 0 0 0> o;
   
   # implements
   pos i m p' <80 0 0 0> l' e' <-80 0 0 0> m' <-60 0 0 0> e' <-30 0 0 0> n t s;
   
   # import
   pos i m p' <70 0 0 0> o' <90 0 0 0> r' <50 0 0 0> t;
   
   # instanceof
   pos i n s t' <-30 0 0 0> a' <-40 0 0 0> n' c' e' <-30 0 0 0> o f;
   
   # (boo)lean
   pos l e' <-70 0 0 0> a' <-40 0 0 0> n;
   
   # long
   pos l o' <-80 0 0 0> n' <-40 0 0 0> g;
   
   # mutable
   pos m u' <20 0 0 0> t' a' b' <90 0 0 0> l' <50 0 0 0> e;
   
   # native
   pos n a' <70 0 0 0> t' <70 0 0 0> i' <20 0 0 0> v' <-40 0 0 0> e;
   
   # package
   pos p a' <30 0 0 0> c' <-20 0 0 0> k' <-45 0 0 0> a' <-50 0 0 0> g' <-30 0 0 0> e;
   
   # private
   pos p r' <30 0 0 0> i' <-30 0 0 0> v' <-70 0 0 0> a t e;
   
   # protected
   pos p r' <60 0 0 0> o' <30 0 0 0> t' e' c' t' e' <-40 0 0 0> d;
   
   # public
   pos p u' <80 0 0 0> b' <190 0 0 0> l' <150 0 0 0> i' <90 0 0 0> c;
   
   # register
   pos r e' <-30 0 0 0> g' i' <70 0 0 0> s' <20 0 0 0> t e r;
   
   # return
   pos r e' <-20 0 0 0> t' <-40 0 0 0> u' <-20 0 0 0> r n;
   
   # short
   pos s h' <30 0 0 0> o' <50 0 0 0> r' <30 0 0 0> t;
   
   # signed
   pos s i' <-40 0 0 0> g' <-70 0 0 0> n e d;
   
   # synchronized
   pos s y n' <20 0 0 0> c' h' r' o' <-40 0 0 0> n' i' z' <-40 0 0 0> e' <-20 0 0 0> d;
   
   # sizeof
   pos s i' <-30 0 0 0> z' <-90 0 0 0> e' <-60 0 0 0> o f;
   
   # strictfp
   pos s t r i' <-60 0 0 0> c' <-120 0 0 0> t' <-80 0 0 0> f' <-70 0 0 0> p;
   
   # switch
   pos s w' <60 0 0 0> i' <60 0 0 0> t' <-30 0 0 0> c' <-50 0 0 0> h;
   
   # template
   pos t e' <-40 0 0 0> m' <20 0 0 0> p' <140 0 0 0> l' <80 0 0 0> a' <30 0 0 0> t e;
   
   # this
   pos t h' <90 0 0 0> i' <90 0 0 0> s;
   
   # throw
   pos t h' <50 0 0 0> r' <50 0 0 0> o' <-40 0 0 0> w;
   
   # transient
   pos t r a' <-40 0 0 0> n' s' i' <-30 0 0 0> e' <-90 0 0 0> n t;
   
   # true
   pos t r' <-10 0 0 0> u' <-30 0 0 0> e;
   
   # typeid
   pos t y p' <40 0 0 0> e' <100 0 0 0> i' <70 0 0 0> d;
   
   # union
   pos u n' <50 0 0 0> i' o' <-60 0 0 0> n;
   
   # unsigned
   pos u n' <20 0 0 0> s i g n e d;
   
   # using
   pos u s i' <-40 0 0 0> n' <-60 0 0 0> g;
   
   # virtual
   pos v i r' <-80 0 0 0> t' <-80 0 0 0> u' <-50 0 0 0> a' <20 0 0 0> l;
   
   # void
   pos v o' <60 0 0 0> i' <40 0 0 0> d;
   
   # volatile
   pos v o' <60 0 0 0> l' a' t' <30 0 0 0> i' <60 0 0 0> l' <50 0 0 0> e;
   
   # while
   pos w h' <120 0 0 0> i' <130 0 0 0> l' <80 0 0 0> e;
   
} ker;
